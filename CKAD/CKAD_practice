Info get from various cloudacademy exercise

kubectl create deployment chk1 --image=nginx:1.15.12-alpine --replicas=3 --dry-run=client -o yaml> deploy.yaml

kubectl top pods -A --sort-by='cpu' //-A, all namespace, k top pods -h, ask for help

kubectl create secret generic backend-user --from-literal=backend-username='backend-admin'

kubectl run server --image=httpd:2.4.39-alpine --dry-run=client -o yaml>pod.yaml

kubectl expose deployment site --type=LoadBalancer --name=[serviceName]
or 
for the above problem is because not the correct deployment is selected for service,so update service use:
kubectl edit svc [serviceName]
where
selector:
  app: site

grep -i [keyword,case insensitive] -A [num of lines after  lines of trailing context after matching lines.]

kubectl logs -n microservice app counter --tail 10  //last 10 lines
kubectl logs -n microservice app poller -f   //stream realtime

k exec pod/secret-pod -- printenv SECRET-ENV-USER //print environment that is set use secret in a pod called secret-pod, you can also run "env" to see all the environment variable

command: [ "/bin/sh", "-c", "env" ]
https://stackoverflow.com/questions/3985193/what-is-bin-sh-c


k get ep //get endpoint for service

https://octant.dev/ //UI tool for kubernetes

kubectl get pods [podName] -o jsonpath={.status.hostIP} //get hostip of a pod using jsonpath

Multi-container design patterns
1. Sidecar pattern

An extra container in your pod to enhance or extend the functionality of the main container.

2. Ambassador pattern

A container that proxy the network connection to the main container.

3. Adapter pattern

A container that transform output of the main container.

This is taken from the original article from 2015: Patterns for Composite Containers
